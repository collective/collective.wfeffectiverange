.template-wftaskoverview #content h2,
.template-wftaskoverview #content h3 {
  display: inline-block;
}
.template-wftaskoverview #content a {
  border: 0;
  text-decoration: none;
}
.template-wftaskoverview #content a:hover {
  border: 0;
  text-decoration: none;
}
.template-wftaskoverview #content td h2,
.template-wftaskoverview #content td h3,
.template-wftaskoverview #content td h4 {
  margin-top: 0;
}
.template-wftaskoverview #content td.title {
  width: 40%;
}
.template-wftaskoverview #content td.title ul {
  padding-left: 1em;
}
.template-wftaskoverview #content td.title .glyphicon-remove,
.template-wftaskoverview #content td.title .glyphicon-trash {
  color: #c4183c;
}
.template-wftaskoverview #content td.run_now {
  width: 2em;
}
.template-wftaskoverview #content td.run_now .glyphicon {
  color: #009000;
}
.template-wftaskoverview #content td.run_now .icon-execute::before {
  content: '\e82a';
  font-family: "fontello";
  font-size: 1.5em;
}
.template-wftaskoverview #content td.transitions .state {
  display: block;
  margin-left: 0.75em;
}
.template-wftaskoverview #content select.transition {
  height: 1.5em;
  padding: 2px 4px;
}
.template-wftaskoverview #content .pattern-pickadate-wrapper input.picker__input {
  height: 1.5em;
  width: 100px;
  padding: 0;
}
.template-wftaskoverview #content .pattern-pickadate-wrapper button.pattern-pickadate-now {
  display: none;
}
.template-wftaskoverview #content .pattern-pickadate-wrapper button.pattern-pickadate-clear {
  padding: 2px 4px;
  font-size: 13px;
  line-height: 1;
}
.template-wftaskoverview #content .pattern-pickadate-wrapper button.pattern-pickadate-clear .glyphicon-trash:before {
  content: "\e014";
}
.contenttype-wftaskfolder::before {
  content: '\e805' !important;
}
/*# sourceMappingURL=data:application/json;base64, */